Projects
  HOST : home
  BODY : 

Plan
  HOST : projects
  BODY : 
    - [ ] {garden} migrate plan to {mmx}
    - [ ] {garden} design wire enclosure
    - [ ] {garden} order additional materials
    - [ ] {@carbonfreegrid} add energy usage total to daily tweet
    - [ ] {paste.date} refactor and add tests, esp. for time zone edge cases
    - [ ] {paste.date} add OAuth flow for backend
    - [ ] {paste.date} allow calendar select
    - [ ] {plotter} design incrementing generative illustration to mark pages
    - [ ] {mmx} write page on micro radio station
    - [ ] {mmx} add inventory
    - [x] {garden} set up heating pads for seedlings
    - [x] {mmx} deduplicate backlinks
    - [x] {mmx} fix bug where only first internal ref is linked
    - [x] {https://climatework.mrshll.com|climatework} relaunch


Active Projects
  HOST : projects
  EMBD : true
  BODY : 
    - {mmx}, this site.
    - {Upstream Tech}, a public benefit corporation founded in 2016.
    - {Garden}, my 4 raised beds and basement grow-lab.
    - {paste.date}, a scheduling program
    - {@carbonfreegrid}, a Twitter bot that tweets daily statistics about the previous day's U.S. energy production, highlighting low- and high-carbon generation.
    - {https://climatework.mrshll.com|climatework}, a low tech board to list opportunitues to work in climate-focused fields such as renewable energy and conservation.

Dormant Projects
  HOST : projects
  EMBD : true
  BODY :
    - {werm.world}, (a briefly) successful attempt to create a micro social network for a few dozen friends.
    - {https://github.com/Mutual-Aid-Medford-and-Somerville/mamas-needs-offers|MAMAS Needs/Offers}, a website that listed "needs" and "offers" for mutual aid in Somerville and Medford. It pulled from a spreadsheet as the backing database for easy management and updating.
    - {Into The Static}, internet videos on thematic shuffle.
    - Future Phone, an application that allowed you to leave yourself a voicemail which would be redelivered far in the future.
    - Latitune was a app created at the end of college with {https://www.benweitzman.com/|Ben Weitzman} (who is a brilliant software developer). The app allowed users to "drop" songs at locations, and to see and listen to songs that were within a certain radius. We created a prototype, but with school wrapping up it never fully came to fruition. We had planned a feature where as you walked, the app would accumulate songs passed by into a playlist. {https://github.com/mrshll/latitune-ios|Source code}.
    - {Snappi} was one of the first applications I released in a polished form to the world.

Plotter
  HOST : active projects
  BODY : 
    Various experiments in generative art and creating code, rendered physical by my AxiDraw.

paste.date
  HOST : active projects
  BODY : 
    In what is certainly my most mundane project to date, I've created an application that loads calendar events from Google Calendar via a {https://twitter.com/marsh/status/1353404000469659648|prayer to the OAuth gods}, and uses lots of date and timezone math to find availablities based on the specified meeting parameters. I haven't had the opportunity to solve an algorithmically interesting problem recently -- so much of my technical work lately is technical piping and static sites. So it was fun to sit down and design an approach to solve a backpack-type problem.

    ![Screenshot of paste.date](img/pastedate-1.png)

    I was prompted to build this by the existing solutions' reliance on flashy formatted pastes into an email and the ever-presumptive "calendar link." I wanted a simple program that give me plaintext times that I could quickly copy and paste. I might add a link option at a later date, but I'd keep it simple. It currently lives on localhost, but I hope to wrap up signup and iron out the last few bugs this month.

@carbonfreegrid
  HOST : active projects
  BREF : @carbonfreegrid
  BODY : 
    Github: https://github.com/mrshll/carbon-free-grid-bot

    Twitter: https://twitter.com/carbonfreegrid

    A daily twitter bot highlighting our progress towards a carbon free grid.

    <blockquote class="twitter-tweet"><p lang="en" dir="ltr">Energy generation yesterday (Feb 19) was<br>üè≠ ‚ñà‚ñà‚ñà‚ñÜ‚ñÅ‚ñÅ 63.0% high-carbon<br>üå± ‚ñà‚ñà‚ñÇ‚ñÅ‚ñÅ‚ñÅ 37.0% low-carbon</p>&mdash; Carbon-Free Grid üåé (@carbonfreegrid) <a href="https://twitter.com/carbonfreegrid/status/1230530987723022336?ref_src=twsrc%5Etfw">February 20, 2020</a></blockquote>

    <blockquote class="twitter-tweet"><p lang="en" dir="ltr">Generation breakdown by source:<br>üî• ‚£ø‚£ø‚£§‚£Ä‚£Ä‚£Ä 40.1% natural gas<br>‚öõÔ∏è ‚£ø‚£Ñ‚£Ä‚£Ä‚£Ä‚£Ä 21.6% nuclear<br>‚ö´ ‚£ø‚£Ñ‚£Ä‚£Ä‚£Ä‚£Ä 20.4% coal<br>üíß ‚£§‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä 8.0% hydro<br>üå¨Ô∏è ‚£§‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä 6.0% wind<br>‚ùì ‚£Ñ‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä 1.6% other<br>‚òÄÔ∏è ‚£Ñ‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä 1.4% solar<br>üõ¢Ô∏è ‚£Ñ‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä 0.8% petroleum</p>&mdash; Carbon-Free Grid üåé (@carbonfreegrid) <a href="https://twitter.com/carbonfreegrid/status/1230530988670881793?ref_src=twsrc%5Etfw">February 20, 2020</a></blockquote>

    <blockquote class="twitter-tweet"><p lang="en" dir="ltr">Regional breakdown (by % generation that is low-carbon)<br>‚£ø‚£ø‚£ø‚£∂‚£Ä‚£Ä NY<br>‚£ø‚£ø‚£ø‚£§‚£Ä‚£Ä TEN<br>‚£ø‚£ø‚£ø‚£Ñ‚£Ä‚£Ä CAR<br>‚£ø‚£ø‚£∑‚£Ä‚£Ä‚£Ä NE<br>‚£ø‚£ø‚£∑‚£Ä‚£Ä‚£Ä NW<br>‚£ø‚£ø‚£¶‚£Ä‚£Ä‚£Ä CENT<br>‚£ø‚£ø‚£§‚£Ä‚£Ä‚£Ä SW<br>‚£ø‚£ø‚£Ñ‚£Ä‚£Ä‚£Ä MIDA<br>‚£ø‚£ø‚£Ä‚£Ä‚£Ä‚£Ä CAL<br>‚£ø‚£∑‚£Ä‚£Ä‚£Ä‚£Ä SE<br>‚£ø‚£¶‚£Ä‚£Ä‚£Ä‚£Ä MIDW<br>‚£ø‚£§‚£Ä‚£Ä‚£Ä‚£Ä TEX<br>‚£∂‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä FLA</p>&mdash; Carbon-Free Grid üåé (@carbonfreegrid) <a href="https://twitter.com/carbonfreegrid/status/1230530989480402945?ref_src=twsrc%5Etfw">February 20, 2020</a></blockquote>

Garden
  HOST : active projects
  BREF : Growing food and getting dirty
  BODY : 
    Being largely confined at home in 2020, I took on many personal and introspective projects. One of the major draws for me to move slightly out of the city was to have more space for outdoor projects. I hope 2021 will be a season of bounty, where I can look forward to tending the beds daily and sharing the harvest with my neighbors and friends. I also hope to transform the vegetables into {the art of fermentation|experimental ferments}.

    1. {Setting up the raised beds}
    2. {garden research|Research on supplies, materials, seeds and techniques}

Garden Research
  HOST : garden
  BREF : Research on supplies, materials, seeds, and techniques
  BODY : 
    ###### Seed suppliers
    - {https://www.rareseeds.com/|Baker Creek}: Heirloom and rare seeds. A massive variety of interesting (and eye-catching) plants. Unclear exactly how much more difficult these are to cultivate than the more basic varieties. They have a concise {https://www.rareseeds.com/growing-guide|growing guide} for most of the species I plan to grow.
    - {https://www.botanicalinterests.com/|Botanical Interests}: Basic seeds that seem more mainstream than the wild and rare varieties. They are available at the local garden store and affordable, so I usually find myself with many of their seed packets in my cache. They also a {https://www.botanicalinterests.com/product/Sowing-Guides|sowing guide}. They have both vegetables and flowers.
    - {https://wildseedproject.net/|Wild Seed Project}: A Maine-based native plant-focused seed organization that focuses primarily on pollinators. I currently have dozens of their seeds in a winter box in the back. Fingers crossed until Spring.
    - {https://sowtrueseed.com/|Sow True Seed}: Open-pollinated, heirloom and organic seeds. They also have mixes for sprouted seeds. They have {https://sowtrueseed.com/blogs/planting|in-depth growing guides} for specific plants that include harvesting seeds for next planting.

    ###### Starting supplies
    There are a number of commercial starter tray/pot options. I first got a few dozen pressed-peat starters. I am inclined to just use household materials and recyclables to make as many as I can. There are methods to make {https://www.instructables.com/DIY-Newspaper-Pots/|plant pots out of newspaper}.

    I've found that the compost I ordered in bulk is too dense and rough to start seeds - they've done far better in a loose and soft soil.

Upstream Tech
  HOST : active projects
  BREF : Upstream Tech
  BODY : 
    {https://upstream.tech|Upstream Tech} is a public benefit corporation founded in 2016 by Marshall and Alden. It currently provides two services:

    1. {https://upstream.tech/lens|Lens}, monitoring software for environmental organizations.
    2. {https://upstream.tech/hydroforecast|HydroForecast}, a hydrologic forecasting service used by renewable energy utilities and conservation organizations.

    In it's early days, we did a number of consulting projects, including two citizen science applications: the New York State's Herp Shark Count for the Galapagos Islands. After attending a lecture by Dr. Grey Nearing, who later became an advisor and briefly our Director of Research, we honed in a satellites and machine learning as tools we could leverage given our previous experience and technical strengths. 
    
    The first non-consulting project was a remote compliance tool for water transfers in the Western U.S. In the West, water rights are purchased or leased by conservation organizations with the aim to transfer water from agriculture use to environmental use to increase flows in streams and rivers for the benefit of freshwater species. Our service allowed organizations to remotely monitor that this transfer indeed occurred and that the water was not used on the farm field - a monitoring process that would typically require costly in-person visits througout the season. These visits diverted resources that could otherwise be applied to additional conservation projects. A classifer was used to predict the liklihood that a field was irrigated or not. The bones of this application later became our data processing pipeline for satellite imagery and machine learning.

    ![An Upstream Tech prototype](img/upstream-proto-1.jpg)

    From there, we became fascinated with anachronous design and complexity of water rights. We built a system that digitized a number of states' water rights, and used the same classifier as before to predict year-over-year water use. An aim was to build a database of water rights that on paper appeared low-value, but reliably applied water to their fields. Another was to identify farm fields that had not used water for a certain number of consecutive years, which would invalidate the claim - a radical and contentious application of technology which would have been dangerous to release without a fuller understanding of the politics and local contexts. Even with some of these databases built, we learned that water rights require handshakes and hat tips and we were trying to apply a scalable solution to a problem that wasn't ready to "scale." So we switched gears back to our compliance monitoring.

    We met with The Nature Conservancy's {https://www.scienceforconservation.org/science-in-action/birdreturns|Bird Returns} program via an introduction from our advisor Brian Richter, the then Director of International Water at The Nature Conservancy. The program applies management guidelines to rice fields in the Pacific Flyway, providing vital habitat for migratory birds in the Spring and Fall. After discussion with the team's leads, Katie Andrews and Ethan Inlander, we determined that our previous compliance monitoring software could be used to monitor projects in the BirdReturns portfolio. We launched this program, and over time it evolved into what is now Lens.

    ![The team visited a project location in the Sacramento area](img/birdreturns-1.jpg)
    _The team visited a project location in the Sacramento area_

    In parallel, we met Gia Schneider from Natel Energy via a meandering series of introductions. Natel Energy developes a hydropower turbine that uniquely allows for 100% safe fish passage. After breakfast together in Boston, we realized we were working on the same underlying problems from very different angles: Natel Energy via hardware and project development; Upstream Tech via software solutions - both with the aim at improving the health of watersheds and building climate resilience. After a few months of discussion and brainstorming, we decided to {upstream joins natel energy|join forces}. Learning about hydropower via Gia and the Natel team, we realized there was an opportunity to apply our machine learning and satellite technology to watershed management and planning, and more specifically starting with hydropower operations. This was the birth of our second product, HydroForecast.

    ![Natel's hanger in Alameda, CA](img/natel-hanger.png)
    _Natel's hanger in Alameda, CA_

    During this time period, we were fortunate to be joined by many friends, past colleagues, and people we met along the way. The team is now over {https://upstream.tech/team|20 people}.

mmx
  HOST : active projects
  BREF : This site is called mmx
  DATE : 2021-01-18
  BODY : 
    ![A person building something with bamboo, from The Red Turtle](img/redturtle020.jpg)

    mmx was built at the start of 2021. Largely inspired by others on {https://webring.xxiivv.com/|webring}, especially {https://wiki.xxiivv.com/site/home.html|Devine}, the site aims to be a long term repository for my writing, notes, and research. Entries on my previous site (a precarious tower of javascript dependencies) were ported over.

    The site's compiler is written in {https://golang.org|Go}. It can generate a graph of entries from a modified version of {https://wiki.xxiivv.com/site/indental.html|Indental} as well as markdown with frontmatter. 
    
    Entries have names, hosts, titles, and bodies. They optionally have dates. An entry can optionally embed itself in a parent - {reading} being a key example. A reference graph is linked after the entries are generated, enabling inbound and outbound relationships to be formed. {home} is a special case that has its own generator function to render the timeline.

    Go's {https://golang.org/pkg/text/template/|templating engine} is lightly used, but it's often more straightforward to generate the html directly into a string (it's a "functional component" after all).

    If you want to learn more, see the {https://github.com/mrshll/mmx|source code}.

    ###### Building mmx

    I've historically defaulted to the technology du jour to build and rebuild my personal and company webpages. It's worked fine - there have been moments of fantastic efficiency, and others of abysmal reverse engineering of an errant Gatsby plugin.

    In the spirit of {low tech}, and heavily inspired by others on the {https://webring.xxiivv.com/|webring}, I sought out to simplify my dependencies, build something myself, and learn some new technologies in the process.

    To start, I mapped out my hoped-for characteristics of the end result.
    I landed on: 

    - low friction (so as to promote more writing);
    - low-level (no automagic frameworks or dependencies; and
    - extendable (I want this to be somethign that evolves with me over the next 5, 10, 15 years).

    {https://github.com/XXIIVV/oscean/|Devine Lu Linvega's Oscean} served as the primary inspiration. I spent a weekend pouring over their wiki, the underlying C-code, and the ecosystem of file formats and prorgams they created. I could (and <strike>should</strike> will) write a whole post on the great things I continue to learn from them. The act of reading through their code and reverse engineering the site compilation was one of the most fun weekends I've had in a while. I promise I am fun. I gained an understanding of their technical approach to linking and render disparate databases, while simultaneously exploring the content of those databases themselves.

    I opted for GoLang as a learning opportunity. Compared to my usual Javascript, GoLang is miles closer to C - the last time I thought about pointers was my senior year of college, if that. I never imagined saying this, but I missed pointers! My impression of GoLang so far is fine. I hardly tapped into the features it is known for, such as concurrancy. But this project served as a gentle introduction.

    Another reason I wanted to create the compiler myself was so that I could add features over time that are typically only available on "platforms," such as bidirectional linking and other memex-style data graph functions. I noticed that Oscean as well as others on the webring were able to do this. How cool.

    In a moment of doubt, I played with {https://www.11ty.dev/|11ty} as well as {https://github.com/mathieudutour/gatsby-digital-garden|gatsby plugins} that promised functionality I sought. But after speedbumps with each, always grappling with the obfuscation that make them "magic," I felt confident that I was on the right path.

    For my pages, I opted to use a modified version of the human readable {https://wiki.xxiivv.com/site/indental.html|Indental} format, and started by porting a portion of my site to it, and writing a parser to convert it to Go structs. From there, I linked the structs into a hierarchical tree and created various rendering functions that converted the ndtl entries into html, resting a bit on Go's native templating engine. It works remarkably well, and I am able to easily add features and improvements over time. For example, I recently added the ability for an entry's body to contain markdown.

    Other features of established web frameworks are replicatable with bash, usually. For instance, "live reloading" was achieved with the following bash:

    ```
    #!/bin/sh
    bash build.sh
    while inotifywait -qqre modify ./src ./links ./data; do
      bash build.sh
    done
    ```

    The site is hosted using Github pages. This is great, because there is no build step. I check in the built files (in /doc) and they are served within seconds. CNAME setup was a breeze.

    ---

    <blockquote>
      The wood thrush, it is! Now I know<br/>
      who sings that clear arpeggio,<br/>
      three far notes weaving<br/>
      into the evening<br/>
      among leaves<br/>
      and shadow;<br/><br/>
      or at dawn in the woods, I've heard<br/>
      the sweet ascending triple word<br/>
      echoing over<br/>
      the silent river ‚Äî<br/>
      but never<br/>
      seen the bird.
    </blockquote>
    - _Learning the Name_ by Ursula K. Le Guin

    A poem by Ursula K. Le Guin is encoded into unicode's representation of braille and used as the hr across the site.

Snappi
  HOST : dormant projects
  BODY : 
    ![Snappi logo](img/snappi-1.png)

    {https://github.com/mrshll/Snappi|Source Code}

    Snappi was developed while living in San Francisco and working at Mozilla in the Summer of 2012. At Mozilla I was on the infosec team, and my project was to containerize Firefox's process. The project to sandbox Firefox was incredibly difficult, and progress to understand the build process was slow. To mix it up, I spent spare time developing a native OSX application that allowed quick sharing of files and screenshots. It integrated with services like Evernote and Dropbox.

    {^youtube|rt7zivSrJeE}

    Thankfully, I've gotten better at making these videos.

    > Snappi is the quickest way to share screenshots and files with your friends. Once you take a screenshot or select one or more files, a unique, shortened link will be generated and copied to your clipboard; all you have to do is press paste!

    > Snappi is lightweight, unobtrusive and runs in the background of your desktop. Each file is automatically uploaded to an Evernote notebook, keeping everything neat, organized and accessible.


    It was a great way to learn Objective-C, not to mention the end-to-end process of designing and market a tool to the public. It was my first time too as being the sole recipient of customer input and feedback. Even though the tool itself was lighthearted, I took any input seriously and made improvements quickly. 

    ![Screenshot of Snappi](img/snappi-2.png)
    ![Screenshot of Snappi](img/snappi-3.png)

Into the Static
  HOST : dormant projects
  BODY :
    ![screenshot of intothestatic.com](img/into-the-static.jpeg)
    Into The Static (previously hosted at intothestatic.com) was an application that collected videos from Instagram for a specified keyword and played them in a neverending sequence. As new videos were posted, they were pushed into the front of the queue so you often got the feeling like you were watching a network of "live" CCTV cameras. One of my favorite moments was watching #snow right at the first snowfall of the year, as videos punctuated the static in increasing frequency. More sobering was using it to see a livestream of protests in Venezuela in 2014.

    Oddly, folks noticed, and at one point the database had indexed over a million videos as people tested out different keywords.

    <blockquote>
    Dear TV,

    You‚Äôve had a good run.

    Love,
    Into the Static

    It‚Äôs the latest innovation in time-wasting excellence, it compiles and plays all the best/weirdest/randomest Vine and Instagram videos out there, and it‚Äôs online now.

    This. Now... this is a treasure. Basically, it‚Äôs like one very sick (and intelligent) individual took all the best short videos in the world and put them on shuffle. And it‚Äôs every bit as bizarre and terrifying as that sounds.

    Here‚Äôs what you do. You go to the site, you log in with your Instagram account‚Äîif you don‚Äôt have one, you can still watch the videos‚Äîand you type in whatever hashtag your heart and/or insatiable curiosity desires. Then, this thing trolls the entire Vinesphere/Instagramaverse and plays you whatever it finds. And that‚Äôs when amazing happens.
    </blockquote>
    {https://www.urbandaddy.com/articles/30451/one-vine-day-the-internets-weirdest-hits-on-shuffle|source}

    There was international coverage as well. They had a more sober view on the possibility to view important world events like the then ongoing unrest in Ukraine and Venezuela.

    <blockquote>
    La r√©volution digitale avec ses objets connect√©s et ses nouveaux canaux ou medias, fait bien son ≈ìuvre. Elle r√©invente les modes de communication et de vie et on l‚Äôexp√©rimente avec d√©lectation, attention, folie ou effroi, chaque jour.
    ...
    Et ainsi regarder en direct leur √©mission compos√©e de ces vid√©os de 15 secondes post√©es qui abordent n‚Äôimporte quel sujet, de la remise d‚Äôun prix tel que les Golden Globe aux luttes civiles en Ukraine ou au Venezuela en passant par un l√¢cher de ballons ou un spectacle d'un artiste de rue en pleine action.
    </blockquote>
    {http://www.influencia.net/fr/actualites/in,data-creativite,tous-reseaux-menent-ils-television,4336.html|source}

werm.world
  HOST : dormant projects
  BODY : 
    <img src='img/werm-world-1.png' style='float:left; border: 1px solid grey; margin-right: .8rem; width: 18rem;'/>
    ~2019. In one of my earlier bouts of {low tech}, I sought to decrease all time spent on large corporations' social media sites. The minor irony being that I relied on Google cloud infrastructure for fast implementation. An acceptable concession.

    <img src='img/werm-world-2.png' style='float:right; height: 30rem'/>

    The site is a mobile-optimize React application, backed by Firebase with a few serverless functions for async operations such as image processing and email notification of new posts. The first iteration of the site, which allowed for posting of images, was built in a weekend and additional functionality like posting other types of media (text, audio) were added over time. One experimental feature was added to allow multiple media (from any user) to be attached horizontally to a post, with a horizontal scrolling element added to see them.

    Users were organized into groups, and each group had one long feed of posts.

    Usage died off for a variety of reasons. I hope to revive this project, potentially as a bona-fide app so that notifications can be sent (not by email). Everyone who used it remembers it fondly.
